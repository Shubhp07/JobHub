# ===============================
# JobHub Backend Configuration
# ===============================

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Application Information
spring.application.name=JobHub Backend API
info.app.name=JobHub Backend
info.app.description=Complete Job Portal Backend with Spring Boot
info.app.version=1.0.0

# ===============================
# Database Configuration
# ===============================
# PostgreSQL Database (Production)
spring.datasource.url=jdbc:postgresql://localhost:5432/jobhub
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ===============================
# JWT Configuration
# ===============================
app.jwt.secret=Kv94Dw!hR8#LmZ2cXp1@N0s5Eq@3uGw!Y9$XrU8@qNc7FzQ!vT4zLpBuDyAeV1Rg
app.jwt.expirationInMs=86400000
app.jwt.RefreshExpirationInMs=604800000
app.jwt.verificationExpirationMs=86400000

app.jwt.resetExpirationMs=86400000

# ===============================
# Email Configuration (Gmail SMTP)
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=sp5535258@gmail.com
spring.mail.password=kgwbfbledahpixyj
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# ===============================
# File Upload Configuration
# ===============================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.file.upload-dir=./uploads

# ===============================
# Frontend Configuration
# ===============================
app.frontend.url=http://localhost:5173

# ===============================
# Logging Configuration
# ===============================
logging.level.com.jobhub=DEBUG
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

#=======================
#AWS
#========================
cloud.aws.credentials.access-key=${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
cloud.aws.region.static=${CLOUD_AWS_REGION_STATIC}
cloud.aws.s3.bucket=${CLOUD_AWS_S3_BUCKET}


# ===============================
# Actuator Configuration
# ===============================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized

# ===============================
# API Documentation Configuration
# ===============================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method

# ===============================
# CORS Configuration
# ===============================
app.cors.allowed-origins=http://localhost:5173


jobhub.oauth2.redirect-uri=http://localhost:5173/login/oauth-success



spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI}

spring.security.oauth2.client.provider.google.authorization-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.google.token-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_TOKEN_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_INFO_URI}
spring.security.oauth2.client.provider.google.user-name-attribute=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_NAME_ATTRIBUTE}



